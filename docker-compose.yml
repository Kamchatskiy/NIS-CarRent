name: car_rent

services:
  frontend:
    container_name: car_rent_frontend
    restart: no
    profiles:
      - prod
    depends_on:
      backend:
        condition: service_started
    build:
      context: frontend/
      dockerfile: Dockerfile.prod
      no_cache: true
    networks:
      - main
    ports:
      - 3002:3000/tcp

  backend:
    container_name: car_rent_backend
    restart: no
    profiles:
      - dev
      - prod
    depends_on:
      db:
        condition: service_healthy
    build:
      context: backend/
      dockerfile: Dockerfile
      no_cache: true
    environment:
      - GIN_MODE=release
    secrets:
      - db-pass
      - admin-key
    networks:
      - main
    ports:
      - 8080:8080/tcp

  db:
    container_name: car_rent_db
    restart: no
    profiles:
      - dev
      - prod
    image: postgres:latest
    environment:
      - POSTGRES_USER=backend
      - POSTGRES_DB=car_rent
      - POSTGRES_PASSWORD_FILE=/run/secrets/password
    secrets:
      - source: db-pass
        target: /run/secrets/password
    volumes:
      - db-data:/var/lib/postgresql/data:rw
    networks:
      - main
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "car_rent"]
      interval: 10s
      timeout: 3s
      retries: 5

  test:
    container_name: car_rent_test
    restart: no
    profiles:
      - dev
    depends_on:
      db:
        condition: service_healthy
      backend:
        condition: service_started
    build:
      context: test/
      dockerfile: Dockerfile
    secrets:
      - admin-key
    networks:
      - main

secrets:
  db-pass:
    file: ./secrets/db-password
  admin-key:
    file: ./secrets/admin-key

volumes:
  db-data:

networks:
  main:
    driver: bridge
